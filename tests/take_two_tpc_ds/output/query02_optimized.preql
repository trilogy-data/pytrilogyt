import _trilogyt_opt_0142e5d0149cc70a1b3fc0d53adc5d72b2497386b492f808f9ad56d304e8acb7;

MERGE catalog_sales.date.* into ~date.*;

MERGE web_sales.date.* into ~date.*;

property relevent_week_seq <- filter date.week_seq where date.year in (2001, 2002);

def weekday_sales(weekday) -> sum(CASE WHEN date.day_of_week = weekday THEN web_sales.extra_sales_price
ELSE 0.0
END) + sum(CASE WHEN date.day_of_week = weekday THEN catalog_sales.extra_sales_price
ELSE 0.0
END);

rowset yearly_agg <- WHERE
    date.week_seq in relevent_week_seq
SELECT
    date.week_seq,
    @weekday_sales(0) -> sunday_sales,
    @weekday_sales(1) -> monday_sales,
    @weekday_sales(2) -> tuesday_sales,
    @weekday_sales(3) -> wednesday_sales,
    @weekday_sales(4) -> thursday_sales,
    @weekday_sales(5) -> friday_sales,
    @weekday_sales(6) -> saturday_sales,
;

def round_lag(sales) -> round(sales / (lead sales by yearly_agg.date.week_seq asc),2);

SELECT
    yearly_agg.date.week_seq,
    @round_lag(yearly_agg.sunday_sales) -> sunday_increase,
    @round_lag(yearly_agg.monday_sales) -> monday_increase,
    @round_lag(yearly_agg.tuesday_sales) -> tuesday_increase,
    @round_lag(yearly_agg.wednesday_sales) -> wednesday_increase,
    @round_lag(yearly_agg.thursday_sales) -> thursday_increase,
    @round_lag(yearly_agg.friday_sales) -> friday_increase,
    @round_lag(yearly_agg.saturday_sales) -> saturday_increase,
HAVING
    sunday_increase is not null

ORDER BY
    yearly_agg.date.week_seq asc nulls first
LIMIT 100
;